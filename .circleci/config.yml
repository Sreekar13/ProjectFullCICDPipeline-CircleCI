version: 2.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build front-end
          command: |
            # Your code here
            cd frontend
            npm install
            npm i oauth
            npm i oauth-sign
            npm run build
      - save_cache:
          paths: frontend/node_modules
          key: frontend-nodemodules
      - save_cache:
          paths: frontend/dist
          key: forntend-build-dist

  build-backend:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Building backend artifacts from the source code
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: backend/node-modules
          key: backend-build

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: frontend-nodemodules
      - run: 
          name: Testing frontend code
          command: |
            cd frontend
            npm install
            npm i oauth
            npm i oauth-sign
            npm run test

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Testing backend code
          command: |
            cd backend
            npm install
            npm run test
    

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Analyzing Frontend code
          command: |
            cd frontend
            npm install
            npm i oauth
            npm i oauth-sign            
            npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Analyzing Frontend code
          command: |
            cd backend
            npm install
            npm audit --audit-level=critical
  

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [test-frontend]
      - scan-backend:
          requires: [test-backend]
